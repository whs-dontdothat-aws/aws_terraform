import json
import os
import requests

DISCORD_WEBHOOK_URL = os.environ.get("DISCORD_WEBHOOK_URL")

def lambda_handler(event, context):
    ip = event.get("ip", "N/A")
    abuse_score = event.get("abuse_score", "N/A")
    isp = event.get("isp", "N/A")
    country = event.get("countryCode", "N/A")
    domain = event.get("domain", "N/A")
    total_reports = event.get("total_reports", "N/A")
    is_hosting = event.get("is_hosting", False)
    usage_type = event.get("usage_type", "N/A")

    embed = {
        "title": "🚨 차단된 IP 감지 및 자동 대응",
        "color": 15158332,
        "fields": [
            {"name": "공격 IP", "value": ip, "inline": True},
            {"name": "국가", "value": country, "inline": True},
            {"name": "ISP", "value": isp, "inline": True},
            {"name": "호스팅 여부", "value": str(is_hosting), "inline": True},
            {"name": "Abuse Score", "value": str(abuse_score), "inline": True},
            {"name": "총 신고 수", "value": str(total_reports), "inline": True},
            {"name": "Usage Type", "value": usage_type, "inline": True},
            {"name": "도메인", "value": domain, "inline": True}
        ],
        "footer": {"text": "AWS WAF 자동 대응 시스템"}
    }

    data = { "embeds": [embed] }

    try:
        res = requests.post(DISCORD_WEBHOOK_URL, json=data)
        res.raise_for_status()
        return {"statusCode": 200, "body": "Notification sent"}
    except Exception as e:
        return {"statusCode": 500, "body": str(e)}