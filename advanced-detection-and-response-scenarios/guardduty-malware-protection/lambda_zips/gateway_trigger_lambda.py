import json
import boto3
import os

stepfunctions = boto3.client('stepfunctions')
STEP_FUNCTION_ARN = os.environ['STEP_FUNCTION_ARN']

def lambda_handler(event, context):
    print("[INFO] Raw event: ", json.dumps(event))
    if 'body' in event:
        body = event['body']
        payload = json.loads(body) if isinstance(body, str) else body
    else:
        payload = event

    ip = payload.get('ip') or payload.get('source_ip') or "0.0.0.0"
    rule_id = payload.get('rule_id', "unknown-rule")
    event_count = payload.get('event_count', 1)
    timestamp = payload.get('timestamp', "unknown")

    input_data = {
        "ip": ip,
        "rule_id": rule_id,
        "event_count": event_count,
        "timestamp": timestamp
    }

    response = stepfunctions.start_execution(
        stateMachineArn=STEP_FUNCTION_ARN,
        input=json.dumps(input_data)
    )

    return {
        "statusCode": 200,
        "body": json.dumps({"message": "Step Function started", "executionArn": response['executionArn']})
    }