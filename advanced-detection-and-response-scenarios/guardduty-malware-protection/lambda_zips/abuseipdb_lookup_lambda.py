import requests
import json
import os

ABUSEIPDB_API_KEY = os.environ.get('ABUSEIPDB_API_KEY')
ABUSEIPDB_URL = "https://api.abuseipdb.com/api/v2/check"

def lambda_handler(event, context):
    ip = event.get("ip")
    if not ip:
        return event

    headers = {
        "Key": ABUSEIPDB_API_KEY,
        "Accept": "application/json"
    }

    params = {
        "ipAddress": ip,
        "maxAgeInDays": "90"
    }

    try:
        res = requests.get(ABUSEIPDB_URL, headers=headers, params=params)
        if res.ok:
            data = res.json().get("data", {})
            event.update({
                "countryCode": data.get("countryCode", "N/A"),
                "isp": data.get("isp", "N/A"),
                "abuse_score": str(data.get("abuseConfidenceScore", "N/A")),
                "total_reports": str(data.get("totalReports", "N/A")),
                "domain": data.get("domain", "N/A"),
                "usage_type": data.get("usageType", "N/A"),
                "is_hosting": "True" if "Hosting" in data.get("usageType", "") else "False",
                "hostnames": ", ".join(data.get("hostnames", [])) or "N/A"
            })
        return event
    except Exception as e:
        event.update({
            "countryCode": "N/A",
            "isp": "N/A",
            "abuse_score": "N/A",
            "total_reports": "N/A",
            "domain": "N/A",
            "usage_type": "N/A",
            "is_hosting": "False",
            "hostnames": "N/A"
        })
        return event