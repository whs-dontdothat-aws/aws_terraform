#####################
# 34. 변수 정의 - AWS 리전
#####################

variable "aws_region" {
  default = "ap-northeast-2"                                 # 서울 리전 (Lambda, API Gateway 등에 사용)
}

#####################
# 35. API Gateway - REST API 생성
#####################

resource "aws_api_gateway_rest_api" "rest_api" {
  name        = "waf-rest-api"                               # API 이름
  description = "REST API for WAF Auto Block"                # API 설명
}

#####################
# 36. /alert 리소스 생성
#####################

resource "aws_api_gateway_resource" "alert" {
  rest_api_id = aws_api_gateway_rest_api.rest_api.id         # 소속된 REST API ID
  parent_id   = aws_api_gateway_rest_api.rest_api.root_resource_id  # 루트 리소스 하위에 생성
  path_part   = "alert"                                      # 경로 설정: /alert
}

#####################
# 37. POST 메서드 설정
#####################

resource "aws_api_gateway_method" "post_alert" {
  rest_api_id   = aws_api_gateway_rest_api.rest_api.id       # 대상 REST API ID
  resource_id   = aws_api_gateway_resource.alert.id          # /alert 리소스에 메서드 추가
  http_method   = "POST"                                     # HTTP POST 메서드
  authorization = "NONE"                                     # 인증 없음 (공개 API)
  depends_on    = [aws_lambda_function.api_trigger]          # Lambda 생성 이후 연결
}

#####################
# 38. Lambda 프록시 통합 설정
#####################

resource "aws_api_gateway_integration" "lambda_alert" {
  rest_api_id             = aws_api_gateway_rest_api.rest_api.id
  resource_id             = aws_api_gateway_resource.alert.id
  http_method             = aws_api_gateway_method.post_alert.http_method
  integration_http_method = "POST"                           # Lambda 호출에 사용할 내부 메서드
  type                    = "AWS_PROXY"                      # Lambda 프록시 통합 방식 사용
  uri = "arn:aws:apigateway:${var.aws_region}:lambda:path/2015-03-31/functions/${aws_lambda_function.api_trigger.arn}/invocations" # 호출 대상 Lambda URI

  depends_on = [aws_lambda_function.api_trigger]
}

#####################
# 39. API 배포 (트리거로 자동 재배포)
#####################

resource "aws_api_gateway_deployment" "this" {
  rest_api_id = aws_api_gateway_rest_api.rest_api.id

  triggers = { redeploy = timestamp() }                      # 매번 새 배포가 되도록 트리거 설정

  depends_on = [aws_api_gateway_integration.lambda_alert]    # 통합 설정 이후 배포
}

#####################
# 40. 배포 Stage 설정
#####################

resource "aws_api_gateway_stage" "prod" {
  rest_api_id   = aws_api_gateway_rest_api.rest_api.id
  deployment_id = aws_api_gateway_deployment.this.id
  stage_name    = "prod"                                     # Stage 이름: prod
}

#####################
# 41. Lambda 권한 설정 (API Gateway → Lambda 호출 허용)
#####################

resource "aws_lambda_permission" "allow_apigw" {
  statement_id  = "AllowExecutionFromAPIGW"                  # 정책 식별자
  action        = "lambda:InvokeFunction"                    # Lambda 호출 권한
  function_name = aws_lambda_function.api_trigger.function_name  # 대상 Lambda 이름
  principal     = "apigateway.amazonaws.com"                 # API Gateway에서 호출 가능하게 설정
  source_arn    = "${aws_api_gateway_rest_api.rest_api.execution_arn}/*/POST/alert"  # 호출 가능 경로 지정
}
