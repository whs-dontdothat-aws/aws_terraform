#####################
# 12. Application Load Balancer(ALB) 생성
#####################

resource "aws_lb" "alb" {
  name               = "alb-waf"                                # ALB 이름 설정
  internal           = false                                    # 외부 인터넷에서 접근 가능한 퍼블릭 ALB
  load_balancer_type = "application"                            # 애플리케이션 로드밸런서 지정
  security_groups    = [aws_security_group.alb_sg.id]           # ALB에 연결할 보안 그룹
  subnets            = [aws_subnet.a.id, aws_subnet.c.id]       # 다중 가용 영역(AZ)에 배치될 서브넷 설정
}

#####################
# 13. Target Group 생성
#####################

resource "aws_lb_target_group" "tg" {
  name        = "waf-tg"                                        # 타겟 그룹 이름 설정
  port        = 80                                              # ALB가 포워딩할 포트
  protocol    = "HTTP"                                          # HTTP 프로토콜 사용
  vpc_id      = aws_vpc.main.id                                 # 타겟 그룹이 속한 VPC ID
  target_type = "instance"                                      # 대상 유형을 EC2 인스턴스로 지정

  health_check {                                                # 헬스 체크 설정
    path                = "/dvwa/"                              # 헬스 체크할 엔드포인트 경로
    protocol            = "HTTP"                                # 헬스 체크 방식
    matcher             = "200-399"                             # 정상 응답 코드 범위
    interval            = 30                                    # 헬스 체크 주기 (초)
    timeout             = 5                                     # 타임아웃 시간 (초)
    healthy_threshold   = 2                                     # 몇 번 연속 성공해야 healthy로 판단할지
    unhealthy_threshold = 2                                     # 몇 번 연속 실패해야 unhealthy로 판단할지
  }
}

#####################
# 14. ALB Listener 생성
#####################

resource "aws_lb_listener" "http" {
  load_balancer_arn = aws_lb.alb.arn                            # 연결할 ALB의 ARN
  port              = 80                                        # 리스닝 포트 설정 (HTTP 기본 포트)
  protocol          = "HTTP"                                    # 리스닝 프로토콜

  default_action {
    type             = "forward"                                # 기본 동작은 트래픽을 타겟 그룹으로 포워딩
    target_group_arn = aws_lb_target_group.tg.arn               # 연결할 타겟 그룹 ARN
  }
}

#####################
# 15. EC2를 타겟 그룹에 등록
#####################

resource "aws_lb_target_group_attachment" "ec2" {
  target_group_arn = aws_lb_target_group.tg.arn                 # 연결할 타겟 그룹 ARN
  target_id        = aws_instance.dvwa.id                       # 등록할 EC2 인스턴스 ID
  port             = 80                                         # EC2가 수신할 포트
}
