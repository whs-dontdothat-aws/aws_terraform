#####################
# 7. EC2 Key Pair 및 PEM 파일 생성
#####################

resource "tls_private_key" "ssh_key" {
  algorithm = "RSA"                                              # RSA 알고리즘을 사용한 키 생성
  rsa_bits  = 4096                                               # RSA 키 길이를 4096비트로 설정
}

resource "aws_key_pair" "generated" {
  key_name   = "ec2-dvwa-key"                                    # AWS 콘솔에서 사용할 키 이름
  public_key = tls_private_key.ssh_key.public_key_openssh        # 생성된 공개키를 AWS에 등록
}

resource "local_file" "pem_file" {
  content         = tls_private_key.ssh_key.private_key_pem      # 개인 키 내용을 PEM 파일로 저장
  filename        = "${path.module}/ec2-dvwa-key.pem"            # 현재 모듈 경로에 .pem 파일 생성
  file_permission = "0400"                                       # 보안 권한 설정 (읽기 전용)
}

#####################
# 8. 보안 그룹 - ALB용
#####################

resource "aws_security_group" "alb_sg" {
  name   = "waf-alb-sg"                                          # 보안 그룹 이름
  vpc_id = aws_vpc.main.id                                       # 연결할 VPC ID

  ingress {
    from_port   = 80                                             # HTTP 포트 허용
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]                                  # 모든 외부에서 접근 허용
  }

  egress {
    from_port   = 0                                              # 모든 포트 및 프로토콜 허용 (출력 트래픽)
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

#####################
# 9. 보안 그룹 - EC2용
#####################

resource "aws_security_group" "ec2_sg" {
  name   = "waf-ec2-sg"                                          # 보안 그룹 이름
  vpc_id = aws_vpc.main.id                                       # 연결할 VPC ID

  ingress {
    from_port   = 22                                             # SSH 접속 허용
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = [var.my_ip]                                    # 내 IP만 허용 (보안)
  }

  ingress {
    from_port       = 80                                         # ALB에서 들어오는 HTTP 허용
    to_port         = 80
    protocol        = "tcp"
    security_groups = [aws_security_group.alb_sg.id]             # ALB SG에서만 허용
  }

  egress {
    from_port   = 0                                              # 출력은 모두 허용
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

#####################
# 10. 최신 Amazon Linux 2 AMI 조회
#####################

data "aws_ssm_parameter" "al2_latest" {
  name = "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-ebs"  # 최신 Amazon Linux 2 AMI 경로
}

#####################
# 11. EC2 인스턴스 생성
#####################

resource "aws_instance" "dvwa" {
  ami                    = data.aws_ssm_parameter.al2_latest.value         # 최신 Amazon Linux 2 AMI 사용
  instance_type          = "t2.micro"                                      # 프리티어 인스턴스 타입
  subnet_id              = aws_subnet.a.id                                 # 퍼블릭 서브넷에 배포
  vpc_security_group_ids = [aws_security_group.ec2_sg.id]                 # EC2에 보안 그룹 연결
  key_name               = aws_key_pair.generated.key_name                # SSH 키 이름 지정

  tags = {
    Name = "ec2-dvwa"                                                     # EC2 이름 태그
  }
}
